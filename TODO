DONE

	Get the session token update request from teh gateway working.

	Right now it passes in the session token and the auth service just can't decrypt it.

	It was because the session token data was modified in place on decryption. Fixed with a copy pre-decrypt.

TODO

	Now I need to get the response processed and handled in the goroutine. Stopping for now.





































	---------------

	Extend the packet structure to have a session token sequence number (uint64) before the session token.

	On the gateway, increase the session token sequence each time the session token is updated on the gateway.

	---------------

	On the client, if the session token in received has a more recent sequence number than the current session token, update the stored session token and sequence number.

	On the client, if the session token is more than 20 seconds old, expire the session token and time out the client (quit).

	---------------

	At this point we should have a system where connect tokens are the only way to connect to the server, and the sessions may only stay active as long as the session manager continues to renew them.

	Pretty badass.

	---------------

	Extend the connect data and session token to include the up/down bandwidth envelope in kbps.

	---------------

	Enforce this bandwidth envelope on the client via choke.

	---------------

	Enforce this bandwidth envelope on the gateway via dropping any additional packets above the envelope.

	---------------

	Enforce this bandwidth envelope on the server via choke.

	---------------