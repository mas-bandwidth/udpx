DONE

	Add packet types:

		0: payload
		1: challenge
		2. challenge response

	Add packet type to client -> gateway packet

	Handle the payload packet type by forwarding to server (todo, check for establish session w. gateway first...)

	Add session map with double buffered idea for automatic timeouts

	Initially, insert into session map without challenge/response, just to make sure that the idea works

	Server sends challenge packet to client, if no session entry for payload packet.

	Prefix the hack payload packet down from server to have first byte "core.PayloadPacket" (0)

	Check for this on the client, and handle the packet type in the recv, either payload, or challenge...

	Sketch out the flow with challenge and response packets

	Client should ignore packets that don't come from the gateway address.

TODO

	-------------

	Hack up something suuuuuuper dirty just to get the challenge/response flow going...

	-------------
	





















	-------------

	Setup the channel for the main thread to process received packets from the goroutine.

	-------------

	Handle payload and challenge packets appropriately when dequeing them from the goroutine.

	-------------

	Implement challenge token and add unit tests for it

	Challenge token should have:

		session id
		sequence
		timestamp 
		client address + port
		gateway address + port

	-------------

	Hook up the challenge token in the challenge/response protocol.

	-------------
